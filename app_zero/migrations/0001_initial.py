# Generated by Django 3.1.7 on 2021-03-16 20:40

import django.contrib.postgres.fields
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(default='Test street 9-9', max_length=250)),
                ('country', models.CharField(default='Test country', max_length=250)),
                ('state', models.CharField(default='Test state', max_length=250)),
                ('municipality', models.CharField(default='Test municipality', max_length=250)),
                ('zip_code', models.CharField(default='Test zip code', max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alarm_type', models.CharField(choices=[('yield', 'Yield'), ('spread', 'Spread'), ('price', 'Price')], max_length=150)),
                ('value', models.DecimalField(decimal_places=20, max_digits=40)),
                ('security_id', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CobOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trader', models.UUIDField()),
                ('security', models.UUIDField()),
                ('submission', models.DateTimeField()),
                ('expiration', models.DateTimeField()),
                ('volume', models.IntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('pending', 'Pending'), ('full-allocation', 'Full Allocation')], max_length=150)),
                ('dirty_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('spread', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True)),
                ('discount_margin', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True)),
                ('yield_value', models.DecimalField(decimal_places=20, max_digits=40)),
                ('direction', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=150)),
                ('order_group', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplianceOfficer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(default='Test first name', max_length=250)),
                ('last_name', models.CharField(default='Test last name', max_length=250)),
                ('telephone', models.CharField(default='Test 555555555', max_length=250)),
                ('email', models.EmailField(default='test@mail.com', max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(default='Test first name', max_length=250)),
                ('last_name', models.CharField(default='Test last name', max_length=250)),
                ('telephone', models.CharField(default='Test 555555555', max_length=250)),
                ('email', models.EmailField(default='test@mail.com', max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Controller',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.URLField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstitutionLead',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_id', models.UUIDField()),
                ('rfc', models.CharField(default='Test RFC', max_length=250)),
                ('logo_id', models.UUIDField()),
                ('contact_user_id', models.UUIDField()),
                ('status', models.CharField(choices=[('verified-without-contract', 'Verified Without Contract'), ('not-verified', 'Not Verified'), ('verified', 'Verified')], max_length=150)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.address')),
                ('compliance_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.complianceofficer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('rfq-submitted', ' Rfq Submitted'), ('rfq-fulfilled', 'Rfq Fulfilled'), ('rfq-expired', 'Rfq Expired'), ('rfq-allocated', 'Rfq Allocated'), ('rfq-cancelled', 'Rfq Cancelled'), ('rfq-received', 'Rfq Received'), ('rfqresponse-sent', 'RfqResponse Sent'), ('rfqresponse-allocated', 'RfqResponse Allocated'), ('rfqresponse-not-allocated', 'RfqResponse Not Allocated'), ('rfqresponse-received', 'RfqResponse Received'), ('rfqresponse-cancelled', 'RfqResponse Cancelled'), ('autoresponder-activated', 'AutoResponder Activated'), ('autoresponder-updated', 'AutoResponder Updated'), ('autoresponder-stopped', 'AutoResponder Stopped'), ('autoresponder-response-sent', 'AutoResponder Response Sent'), ('autoresponder-response-cancelled', 'AutoResponder Response Cancelled'), ('autoresponder-response-not-allocated', ' AutoResponder Response Not Allocated'), ('alarm-activated', 'Alarm Activated'), ('alarm-disabled', 'Alarm Disabled'), ('alarm-triggered', 'Alarm Triggered'), ('alarm-updated', ' Alarm Updated'), ('tradeblock-booked', 'TradeBlock Booked'), ('cobstream-order-updated', 'CobStream Order Updated'), ('cobstream-order-stopped', 'CobStream Order Stopped'), ('cob-order-placed', 'CobOrder Placed'), ('cob-order-expired', 'CobOrder Expired'), ('cob-order-cancelled', 'CobOrder Cancelled'), ('cob-order-partial-allocation', 'CobOrder Partial Allocation'), ('cob-order-full-allocation', 'CobOrder Full Allocation'), ('cob-order-outstanding-mc', 'CobOrder Outstanding Market Close'), ('cob-order-refreshed', 'CobOrder Refreshed'), ('transaction-settlement-confirmed', 'Transaction Settlement Confirmed'), ('transaction-settlement-failed', 'Transaction Settlement Failed')], max_length=250)),
                ('body', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('status', models.CharField(choices=[('read', 'Read'), ('unread', 'Unread'), ('archived', 'Archived')], max_length=250)),
                ('user_id', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('notification_type', models.CharField(choices=[('rfq-submitted', ' Rfq Submitted'), ('rfq-fulfilled', 'Rfq Fulfilled'), ('rfq-expired', 'Rfq Expired'), ('rfq-allocated', 'Rfq Allocated'), ('rfq-cancelled', 'Rfq Cancelled'), ('rfq-received', 'Rfq Received'), ('rfqresponse-sent', 'RfqResponse Sent'), ('rfqresponse-allocated', 'RfqResponse Allocated'), ('rfqresponse-not-allocated', 'RfqResponse Not Allocated'), ('rfqresponse-received', 'RfqResponse Received'), ('rfqresponse-cancelled', 'RfqResponse Cancelled'), ('autoresponder-activated', 'AutoResponder Activated'), ('autoresponder-updated', 'AutoResponder Updated'), ('autoresponder-stopped', 'AutoResponder Stopped'), ('autoresponder-response-sent', 'AutoResponder Response Sent'), ('autoresponder-response-cancelled', 'AutoResponder Response Cancelled'), ('autoresponder-response-not-allocated', ' AutoResponder Response Not Allocated'), ('alarm-activated', 'Alarm Activated'), ('alarm-disabled', 'Alarm Disabled'), ('alarm-triggered', 'Alarm Triggered'), ('alarm-updated', ' Alarm Updated'), ('tradeblock-booked', 'TradeBlock Booked'), ('cobstream-order-updated', 'CobStream Order Updated'), ('cobstream-order-stopped', 'CobStream Order Stopped'), ('cob-order-placed', 'CobOrder Placed'), ('cob-order-expired', 'CobOrder Expired'), ('cob-order-cancelled', 'CobOrder Cancelled'), ('cob-order-partial-allocation', 'CobOrder Partial Allocation'), ('cob-order-full-allocation', 'CobOrder Full Allocation'), ('cob-order-outstanding-mc', 'CobOrder Outstanding Market Close'), ('cob-order-refreshed', 'CobOrder Refreshed'), ('transaction-settlement-confirmed', 'Transaction Settlement Confirmed'), ('transaction-settlement-failed', 'Transaction Settlement Failed')], max_length=250)),
                ('notify_as', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('email', 'Notify as email'), ('alarm', 'Notify as alarm'), ('toast', 'Notify as toast'), ('inbox', 'Notify as inbox')], max_length=250), size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rfq',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('security_id', models.UUIDField()),
                ('trader_id', models.UUIDField()),
                ('anonymous', models.BooleanField(default=True)),
                ('public', models.BooleanField(default=False)),
                ('submission', models.DateTimeField()),
                ('expiration', models.DateTimeField()),
                ('status', models.CharField(choices=[('cancelled', 'Cancelled'), ('expired', 'Expired'), ('active', 'Active')], max_length=150)),
                ('direction', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('market', 'Market')], max_length=150)),
                ('volume', models.IntegerField()),
                ('counterparty_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None)),
                ('settlement_currency', models.CharField(choices=[('usd', 'U.S. Dollar'), ('mxn', 'Mexican Peso')], max_length=150)),
                ('order_group_id', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RfqAutoResponder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('security_id', models.UUIDField()),
                ('trader_id', models.UUIDField()),
                ('counterparty_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None)),
                ('min_volume', models.PositiveIntegerField()),
                ('max_volume', models.PositiveIntegerField()),
                ('public', models.BooleanField()),
                ('settlement_currency', models.CharField(choices=[('usd', 'U.S. Dollar'), ('mxn', 'Mexican Peso')], max_length=250)),
                ('ask_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_spread', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_spread', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deactivated', 'Deactivated')], max_length=150)),
                ('priority', models.DateTimeField()),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RfqResponse',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trader_id', models.UUIDField()),
                ('submission', models.DateTimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], max_length=150)),
                ('ask_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_yield', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_spread', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_volume', models.IntegerField()),
                ('ask_discount_margin', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('ask_notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_yield', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_spread', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_discount_margin', models.DecimalField(decimal_places=20, max_digits=40)),
                ('bid_volume', models.IntegerField()),
                ('bid_fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('autoresponded', models.BooleanField()),
                ('rfq', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.rfq')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TradeBlock',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('security_id', models.UUIDField()),
                ('volume', models.IntegerField()),
                ('notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('settlement_currency', models.CharField(choices=[('usd', 'U.S. Dollar'), ('mxn', 'Mexican Peso')], max_length=150)),
                ('status', models.CharField(choices=[('failed', 'Failed'), ('partially-settled', 'Partially Settled'), ('settled', 'Settled')], max_length=150)),
                ('fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_weighted_avg_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_weighted_avg_yield', models.DecimalField(decimal_places=20, max_digits=40)),
                ('buyer_institution_id', models.UUIDField()),
                ('seller_institution_id', models.UUIDField()),
                ('booked_by_trader_id', models.UUIDField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TradeBlockSettlement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('settlement_instruction_id', models.UUIDField()),
                ('notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('status', models.CharField(choices=[('failed', 'Failed'), ('settled', 'Settled')], max_length=150)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timezone', models.CharField(max_length=250)),
                ('date_format', models.CharField(max_length=250)),
                ('language', models.CharField(max_length=250)),
                ('theme_preferences', models.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trader_id', models.UUIDField()),
                ('name', models.CharField(max_length=250)),
                ('security_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), blank=True, null=True, size=None)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deactivated', 'Deactivated')], max_length=150)),
                ('description', models.TextField(blank=True, default='')),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RfqTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('buyer_id', models.UUIDField()),
                ('seller_id', models.UUIDField()),
                ('security_id', models.UUIDField()),
                ('volume', models.IntegerField()),
                ('notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('accrued_interest', models.DecimalField(decimal_places=20, max_digits=40)),
                ('price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_yield', models.DecimalField(decimal_places=20, max_digits=40)),
                ('discount_margin', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True)),
                ('yield_value', models.DecimalField(decimal_places=20, max_digits=40)),
                ('dirty_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('status', models.CharField(choices=[('closed', 'Closed'), ('booked', 'Booked'), ('failed', 'Failed')], max_length=150)),
                ('fee_buyer', models.DecimalField(decimal_places=20, max_digits=40)),
                ('fee_seller', models.DecimalField(decimal_places=20, max_digits=40)),
                ('vat', models.DecimalField(decimal_places=20, max_digits=40)),
                ('cash_amount', models.DecimalField(decimal_places=20, max_digits=40)),
                ('total_cash', models.DecimalField(decimal_places=20, max_digits=40)),
                ('settlement_date', models.DateTimeField()),
                ('settlement_currency', models.CharField(choices=[('usd', 'U.S. Dollar'), ('mxn', 'Mexican Peso')], max_length=150)),
                ('fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('rfq', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.rfq')),
                ('rfq_response', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.rfqresponse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution_id', models.UUIDField()),
                ('comments', models.TextField()),
                ('contact_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.contactperson')),
                ('institution_lead', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.institutionlead')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concierge',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('institution_ids', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), size=None)),
                ('leads', models.ManyToManyField(to='app_zero.Lead')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CobTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('buyer', models.UUIDField()),
                ('seller', models.UUIDField()),
                ('security', models.UUIDField()),
                ('volume', models.IntegerField()),
                ('notional', models.DecimalField(decimal_places=20, max_digits=40)),
                ('accrued_interest', models.DecimalField(decimal_places=20, max_digits=40)),
                ('price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('all_in_yield', models.DecimalField(decimal_places=20, max_digits=40)),
                ('discount_margin', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True)),
                ('yield_value', models.DecimalField(decimal_places=20, max_digits=40)),
                ('dirty_price', models.DecimalField(decimal_places=20, max_digits=40)),
                ('status', models.CharField(choices=[('closed', 'Closed'), ('booked', 'Booked'), ('failed', 'Failed')], max_length=150)),
                ('fee_buyer', models.DecimalField(decimal_places=20, max_digits=40)),
                ('fee_seller', models.DecimalField(decimal_places=20, max_digits=40)),
                ('vat', models.DecimalField(decimal_places=20, max_digits=40)),
                ('cash_amount', models.DecimalField(decimal_places=20, max_digits=40)),
                ('total_cash', models.DecimalField(decimal_places=20, max_digits=40)),
                ('settlement_date', models.DateTimeField()),
                ('settlement_currency', models.CharField(choices=[('usd', 'U.S. Dollar'), ('mxn', 'Mexican Peso')], max_length=150)),
                ('fx', models.DecimalField(decimal_places=20, max_digits=40)),
                ('spread', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True)),
                ('buy_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cob_buy_order', to='app_zero.coborder')),
                ('sell_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cob_sell_order', to='app_zero.coborder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CobStream',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deactivated', 'Deactivated')], max_length=150)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('order_group_id', models.UUIDField()),
                ('cob_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.coborder')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CobAutoRefresher',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('autorefresh_type', models.CharField(choices=[('fixed-price', 'Fixed Price'), ('fixed-spread', 'Fixed Spread'), ('fixed-ispread', 'Fixed iSpread')], max_length=150)),
                ('interval', models.PositiveIntegerField()),
                ('cob_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_zero.coborder')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
